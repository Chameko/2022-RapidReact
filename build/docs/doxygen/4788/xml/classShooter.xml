<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classShooter" kind="class" language="C++" prot="public">
    <compoundname>Shooter</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classShooter_1a1e33957de1a6b5f184582d43c0da2e38" prot="private" static="no" mutable="no">
        <type>TeleopShooter</type>
        <definition>TeleopShooter Shooter::_teleopShooter</definition>
        <argsstring></argsstring>
        <name>_teleopShooter</name>
        <initializer>{ TeleopShooter::kTesting}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main/include/Shooter.h" line="53" column="1" bodyfile="src/main/include/Shooter.h" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classShooter_1ae6d7bb64fa30dd5650c6fe7fa662c120" prot="private" static="no" mutable="no">
        <type>wml::controllers::SmartControllerGroup &amp;</type>
        <definition>wml::controllers::SmartControllerGroup&amp; Shooter::_contGroup</definition>
        <argsstring></argsstring>
        <name>_contGroup</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main/include/Shooter.h" line="54" column="1" bodyfile="src/main/include/Shooter.h" bodystart="54" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classShooter_1a1825bb83885fb9ffc193609509fdc9ce" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Shooter::shooterManualSpeed</definition>
        <argsstring></argsstring>
        <name>shooterManualSpeed</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main/include/Shooter.h" line="60" column="1" bodyfile="src/main/include/Shooter.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classShooter_1a0a1d24e474bce7e6133d3612265d5f48" prot="private" static="no" mutable="no">
        <type><ref refid="structRobotMap_1_1ShooterSystem" kindref="compound">RobotMap::ShooterSystem</ref> &amp;</type>
        <definition>RobotMap::ShooterSystem&amp; Shooter::_shooterSystem</definition>
        <argsstring></argsstring>
        <name>_shooterSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main/include/Shooter.h" line="61" column="1" bodyfile="src/main/include/Shooter.h" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classShooter_1ad7f75beb8dd5762105014c5a3a19af21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Shooter::Shooter</definition>
        <argsstring>(RobotMap::ShooterSystem &amp;shooterSystem, SmartControllerGroup &amp;contGroup)</argsstring>
        <name>Shooter</name>
        <param>
          <type><ref refid="structRobotMap_1_1ShooterSystem" kindref="compound">RobotMap::ShooterSystem</ref> &amp;</type>
          <declname>shooterSystem</declname>
        </param>
        <param>
          <type>SmartControllerGroup &amp;</type>
          <declname>contGroup</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main/include/Shooter.h" line="33" column="1" bodyfile="src/main/cpp/Shooter.cpp" bodystart="11" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="classShooter_1a15b99c2d6cb808c18c65455d1e2d4b43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Shooter::teleopOnUpdate</definition>
        <argsstring>(double dt)</argsstring>
        <name>teleopOnUpdate</name>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main/include/Shooter.h" line="37" column="1" bodyfile="src/main/cpp/Shooter.cpp" bodystart="16" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classShooter_1ae829808f7d97fa43bed11e8e766cb690" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Shooter::speed</definition>
        <argsstring>(double metersPerSecond)</argsstring>
        <name>speed</name>
        <param>
          <type>double</type>
          <declname>metersPerSecond</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the flywheel to a specific speed, later can be called in teleopOnUpdate for different distances.</para><para>Needs to be a closed loop PID system </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main/include/Shooter.h" line="43" column="1" bodyfile="src/main/cpp/Shooter.cpp" bodystart="45" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classShooter_1af452aab18fa0fcbc208c678a8efbce89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Shooter::manualControl</definition>
        <argsstring>(double dt)</argsstring>
        <name>manualControl</name>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>manual control of the shooter.</para><para>Left trigger controls the shooter manually </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main/include/Shooter.h" line="48" column="1" bodyfile="src/main/cpp/Shooter.cpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classShooter_1a74629cd8b16cde243f11cf79ebd73e8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Shooter::testing</definition>
        <argsstring>(double dt)</argsstring>
        <name>testing</name>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>for testing the shooter </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main/include/Shooter.h" line="50" column="1" bodyfile="src/main/cpp/Shooter.cpp" bodystart="71" bodyend="87"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="src/main/include/Shooter.h" line="30" column="1" bodyfile="src/main/include/Shooter.h" bodystart="30" bodyend="62"/>
    <listofallmembers>
      <member refid="classShooter_1ae6d7bb64fa30dd5650c6fe7fa662c120" prot="private" virt="non-virtual"><scope>Shooter</scope><name>_contGroup</name></member>
      <member refid="classShooter_1a0a1d24e474bce7e6133d3612265d5f48" prot="private" virt="non-virtual"><scope>Shooter</scope><name>_shooterSystem</name></member>
      <member refid="classShooter_1a1e33957de1a6b5f184582d43c0da2e38" prot="private" virt="non-virtual"><scope>Shooter</scope><name>_teleopShooter</name></member>
      <member refid="classShooter_1af452aab18fa0fcbc208c678a8efbce89" prot="public" virt="non-virtual"><scope>Shooter</scope><name>manualControl</name></member>
      <member refid="classShooter_1ad7f75beb8dd5762105014c5a3a19af21" prot="public" virt="non-virtual"><scope>Shooter</scope><name>Shooter</name></member>
      <member refid="classShooter_1a1825bb83885fb9ffc193609509fdc9ce" prot="private" virt="non-virtual"><scope>Shooter</scope><name>shooterManualSpeed</name></member>
      <member refid="classShooter_1ae829808f7d97fa43bed11e8e766cb690" prot="public" virt="non-virtual"><scope>Shooter</scope><name>speed</name></member>
      <member refid="classShooter_1a15b99c2d6cb808c18c65455d1e2d4b43" prot="public" virt="non-virtual"><scope>Shooter</scope><name>teleopOnUpdate</name></member>
      <member refid="classShooter_1a74629cd8b16cde243f11cf79ebd73e8e" prot="public" virt="non-virtual"><scope>Shooter</scope><name>testing</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
