<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="Drivebase_8cpp" kind="file" language="C++">
    <compoundname>Drivebase.cpp</compoundname>
    <includes refid="Drivebase_8h" local="yes">Drivebase.h</includes>
    <incdepgraph>
      <node id="87">
        <label>strategy/MPStrategy.h</label>
      </node>
      <node id="50">
        <label>Drivebase.h</label>
        <link refid="Drivebase_8h_source"/>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>frc/GenericHID.h</label>
      </node>
      <node id="55">
        <label>stdint.h</label>
      </node>
      <node id="84">
        <label>Toggle.h</label>
      </node>
      <node id="79">
        <label>sensors/LimitSwitch.h</label>
      </node>
      <node id="56">
        <label>frc/Timer.h</label>
      </node>
      <node id="54">
        <label>string</label>
      </node>
      <node id="89">
        <label>Gearbox.h</label>
      </node>
      <node id="61">
        <label>frc/DriverStation.h</label>
      </node>
      <node id="80">
        <label>sensors/NavX.h</label>
      </node>
      <node id="69">
        <label>frc/trajectory/TrajectoryUtil.h</label>
      </node>
      <node id="76">
        <label>actuators/VoltageController.h</label>
      </node>
      <node id="93">
        <label>WMLRev.h</label>
      </node>
      <node id="91">
        <label>sensors/BinarySensor.h</label>
      </node>
      <node id="65">
        <label>frc/smartdashboard/SmartDashboard.h</label>
      </node>
      <node id="85">
        <label>devices/StateDevice.h</label>
      </node>
      <node id="52">
        <label>controllers/Controllers.h</label>
      </node>
      <node id="75">
        <label>actuators/DoubleSolenoid.h</label>
      </node>
      <node id="72">
        <label>actuators/BinaryServo.h</label>
      </node>
      <node id="90">
        <label>strategy/Strategy.h</label>
      </node>
      <node id="70">
        <label>wpi/SmallString.h</label>
      </node>
      <node id="67">
        <label>networktables/NetworkTableInstance.h</label>
      </node>
      <node id="94">
        <label>ControlMap.h</label>
        <link refid="ControlMap_8h"/>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="68">
        <label>frc/Filesystem.h</label>
      </node>
      <node id="64">
        <label>frc/Servo.h</label>
      </node>
      <node id="73">
        <label>actuators/Compressor.h</label>
      </node>
      <node id="88">
        <label>control/MotorFilters.h</label>
      </node>
      <node id="78">
        <label>sensors/Encoder.h</label>
      </node>
      <node id="82">
        <label>control/PIDController.h</label>
      </node>
      <node id="60">
        <label>cameraserver/CameraServer.h</label>
      </node>
      <node id="95">
        <label>vector</label>
      </node>
      <node id="86">
        <label>strategy/StrategyController.h</label>
      </node>
      <node id="71">
        <label>WMLCtre.h</label>
      </node>
      <node id="92">
        <label>rev/CANSparkMax.h</label>
      </node>
      <node id="66">
        <label>frc/AnalogInput.h</label>
      </node>
      <node id="63">
        <label>frc/PowerDistribution.h</label>
      </node>
      <node id="51">
        <label>iostream</label>
      </node>
      <node id="83">
        <label>MotionProfiling.h</label>
      </node>
      <node id="57">
        <label>frc/TimedRobot.h</label>
      </node>
      <node id="81">
        <label>sensors/PressureSensor.h</label>
      </node>
      <node id="53">
        <label>RobotMap.h</label>
        <link refid="RobotMap_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="56" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="60" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="62" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="64" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
        <childnode refid="66" relation="include">
        </childnode>
        <childnode refid="67" relation="include">
        </childnode>
        <childnode refid="68" relation="include">
        </childnode>
        <childnode refid="69" relation="include">
        </childnode>
        <childnode refid="70" relation="include">
        </childnode>
        <childnode refid="71" relation="include">
        </childnode>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="72" relation="include">
        </childnode>
        <childnode refid="73" relation="include">
        </childnode>
        <childnode refid="74" relation="include">
        </childnode>
        <childnode refid="75" relation="include">
        </childnode>
        <childnode refid="76" relation="include">
        </childnode>
        <childnode refid="77" relation="include">
        </childnode>
        <childnode refid="78" relation="include">
        </childnode>
        <childnode refid="79" relation="include">
        </childnode>
        <childnode refid="80" relation="include">
        </childnode>
        <childnode refid="81" relation="include">
        </childnode>
        <childnode refid="82" relation="include">
        </childnode>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="58">
        <label>frc/DoubleSolenoid.h</label>
      </node>
      <node id="49">
        <label>src/main/cpp/Drivebase.cpp</label>
        <link refid="Drivebase_8cpp"/>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="74">
        <label>NTProvider.h</label>
      </node>
      <node id="77">
        <label>Drivetrain.h</label>
      </node>
      <node id="62">
        <label>frc/SpeedControllerGroup.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;Drivebase.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacewml" kindref="compound">wml</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacewml_1_1controllers" kindref="compound">wml::controllers</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal">DrivebaseManual::DrivebaseManual(std::string<sp/>name,<sp/>Drivetrain<sp/>&amp;drivetrain,<sp/>SmartControllerGroup<sp/>&amp;contGroup)<sp/>:<sp/>Strategy(name),<sp/>_drivetrain(drivetrain),<sp/>_contGroup(contGroup)<sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/>Requires(&amp;drivetrain);</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/>SetCanBeInterrupted(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/>SetCanBeReused(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="10"><highlight class="normal">};</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DrivebaseManual::OnUpdate(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fabs(_contGroup.Get(ControlMap::drivebaseL)<sp/>&gt;=<sp/>ControlMap::XboxDeadzone))<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>_leftPower<sp/>=<sp/>_contGroup.Get(ControlMap::drivebaseL);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fabs(_contGroup.Get(ControlMap::drivebaseR))<sp/>&gt;=<sp/>ControlMap::XboxDeadzone)<sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>_rightPower<sp/>=<sp/>_contGroup.Get(ControlMap::drivebaseR);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>_drivetrain.Set(_leftPower,<sp/>_rightPower);</highlight></codeline>
<codeline lineno="22"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/main/cpp/Drivebase.cpp"/>
  </compounddef>
</doxygen>
